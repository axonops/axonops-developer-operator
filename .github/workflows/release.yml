---
name: Publish Docker image

on:
  release:
    types: [published]

jobs:
  release:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setup mirror
        uses: self-actuated/hub-mirror@master

      - name: Get TAG
        id: get_tag
        run: echo TAG=${GITHUB_REF##*/} >> $GITHUB_ENV

      - name: Get Repo Owner
        id: get_repo_owner
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" > $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: "Get docker info"
        run: |
          echo "Actor: ${{ github.actor }}"

      - name: "Log into GitHub Container Registry"
        if: "github.event_name != 'pull_request'"
        uses: "docker/login-action@v1"
        with:
          registry: "ghcr.io"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm/v6,linux/arm64
          build-args: |
            VERSION=${{ env.TAG }}
            GitCommit=${{ github.sha }}
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/axonops-developer-operator:${{ github.sha }}
            ghcr.io/${{ env.REPO_OWNER }}/axonops-developer-operator:${{ env.TAG }}
            ghcr.io/${{ env.REPO_OWNER }}/axonops-developer-operator:latest
          labels: |
            LABEL org.opencontainers.image.source="https://github.com/${{ env.REPO_OWNER }}/axonops-developer-operator"

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
